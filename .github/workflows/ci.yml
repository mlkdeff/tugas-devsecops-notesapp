name: CI - DevSecOps pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/notes-app

jobs:
  unit_test:
    name: Unit Test (pytest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - run: |
          export PYTHONPATH=$PWD
          pytest -q

  sast_bandit:
    name: SAST (Bandit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          pip install bandit
          bandit -r . --exit-zero

  sca_pip_audit:
    name: SCA (pip-audit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          pip install pip-audit
          pip-audit -r requirements.txt --progress-spinner=off
          pip-audit -r dev-requirements.txt --progress-spinner=off

  secret_scan_gitleaks:
    name: Secret Scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Gitleaks Secret Scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: true
          GITLEAKS_REPORT_FORMAT: sarif
          GITLEAKS_EXIT_CODE: "2"

  build_and_push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [unit_test, sast_bandit, sca_pip_audit, secret_scan_gitleaks]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  image_scan_trivy:
    name: Image Scan (Trivy)
    runs-on: ubuntu-latest
    needs: [build_and_push]
    steps:
      - uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:latest
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          format: table
          exit-code: '0'
